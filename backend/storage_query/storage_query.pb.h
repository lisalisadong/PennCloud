// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage_query.proto

#ifndef PROTOBUF_storage_5fquery_2eproto__INCLUDED
#define PROTOBUF_storage_5fquery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace storagequery {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_storage_5fquery_2eproto();
void protobuf_AssignDesc_storage_5fquery_2eproto();
void protobuf_ShutdownFile_storage_5fquery_2eproto();

class CPutRequest;
class CPutResponse;
class DeleteRequest;
class DeleteResponse;
class GetRequest;
class GetResponse;
class PutRequest;
class PutResponse;

// ===================================================================

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  void Swap(GetRequest* other);

  // implements Message ----------------------------------------------

  inline GetRequest* New() const { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.GetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetResponse) */ {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  void Swap(GetResponse* other);

  // implements Message ----------------------------------------------

  inline GetResponse* New() const { return New(NULL); }

  GetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  void set_val(const char* value);
  void set_val(const char* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:storagequery.GetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  void Swap(PutRequest* other);

  // implements Message ----------------------------------------------

  inline PutRequest* New() const { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // optional string val = 3;
  void clear_val();
  static const int kValFieldNumber = 3;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  void set_val(const char* value);
  void set_val(const char* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:storagequery.PutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PutRequest* default_instance_;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  void Swap(PutResponse* other);

  // implements Message ----------------------------------------------

  inline PutResponse* New() const { return New(NULL); }

  PutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.PutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PutResponse* default_instance_;
};
// -------------------------------------------------------------------

class CPutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.CPutRequest) */ {
 public:
  CPutRequest();
  virtual ~CPutRequest();

  CPutRequest(const CPutRequest& from);

  inline CPutRequest& operator=(const CPutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CPutRequest& default_instance();

  void Swap(CPutRequest* other);

  // implements Message ----------------------------------------------

  inline CPutRequest* New() const { return New(NULL); }

  CPutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CPutRequest& from);
  void MergeFrom(const CPutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CPutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // optional string val1 = 3;
  void clear_val1();
  static const int kVal1FieldNumber = 3;
  const ::std::string& val1() const;
  void set_val1(const ::std::string& value);
  void set_val1(const char* value);
  void set_val1(const char* value, size_t size);
  ::std::string* mutable_val1();
  ::std::string* release_val1();
  void set_allocated_val1(::std::string* val1);

  // optional string val2 = 4;
  void clear_val2();
  static const int kVal2FieldNumber = 4;
  const ::std::string& val2() const;
  void set_val2(const ::std::string& value);
  void set_val2(const char* value);
  void set_val2(const char* value, size_t size);
  ::std::string* mutable_val2();
  ::std::string* release_val2();
  void set_allocated_val2(::std::string* val2);

  // @@protoc_insertion_point(class_scope:storagequery.CPutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::internal::ArenaStringPtr val1_;
  ::google::protobuf::internal::ArenaStringPtr val2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static CPutRequest* default_instance_;
};
// -------------------------------------------------------------------

class CPutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.CPutResponse) */ {
 public:
  CPutResponse();
  virtual ~CPutResponse();

  CPutResponse(const CPutResponse& from);

  inline CPutResponse& operator=(const CPutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CPutResponse& default_instance();

  void Swap(CPutResponse* other);

  // implements Message ----------------------------------------------

  inline CPutResponse* New() const { return New(NULL); }

  CPutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CPutResponse& from);
  void MergeFrom(const CPutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CPutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.CPutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static CPutResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.DeleteRequest) */ {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();

  DeleteRequest(const DeleteRequest& from);

  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();

  void Swap(DeleteRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteRequest* New() const { return New(NULL); }

  DeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.DeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static DeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.DeleteResponse) */ {
 public:
  DeleteResponse();
  virtual ~DeleteResponse();

  DeleteResponse(const DeleteResponse& from);

  inline DeleteResponse& operator=(const DeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteResponse& default_instance();

  void Swap(DeleteResponse* other);

  // implements Message ----------------------------------------------

  inline DeleteResponse* New() const { return New(NULL); }

  DeleteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteResponse& from);
  void MergeFrom(const DeleteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.DeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static DeleteResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// optional string row = 1;
inline void GetRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.row)
}
inline void GetRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.row)
}
inline void GetRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.row)
}
inline ::std::string* GetRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.row)
}

// optional string col = 2;
inline void GetRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.col)
}
inline void GetRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.col)
}
inline void GetRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.col)
}
inline ::std::string* GetRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.col)
}

// -------------------------------------------------------------------

// GetResponse

// optional string val = 1;
inline void GetResponse::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetResponse::val() const {
  // @@protoc_insertion_point(field_get:storagequery.GetResponse.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetResponse.val)
}
inline void GetResponse::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetResponse.val)
}
inline void GetResponse::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetResponse.val)
}
inline ::std::string* GetResponse::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetResponse.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.GetResponse.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetResponse.val)
}

// -------------------------------------------------------------------

// PutRequest

// optional string row = 1;
inline void PutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.row)
}
inline void PutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.row)
}
inline void PutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.row)
}
inline ::std::string* PutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.row)
}

// optional string col = 2;
inline void PutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.col)
}
inline void PutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.col)
}
inline void PutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.col)
}
inline ::std::string* PutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.col)
}

// optional string val = 3;
inline void PutRequest::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::val() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.val)
}
inline void PutRequest::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.val)
}
inline void PutRequest::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.val)
}
inline ::std::string* PutRequest::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.val)
}

// -------------------------------------------------------------------

// PutResponse

// -------------------------------------------------------------------

// CPutRequest

// optional string row = 1;
inline void CPutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.row)
}
inline void CPutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.row)
}
inline void CPutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.row)
}
inline ::std::string* CPutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.row)
}

// optional string col = 2;
inline void CPutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.col)
}
inline void CPutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.col)
}
inline void CPutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.col)
}
inline ::std::string* CPutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.col)
}

// optional string val1 = 3;
inline void CPutRequest::clear_val1() {
  val1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::val1() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val1)
  return val1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_val1(const ::std::string& value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val1)
}
inline void CPutRequest::set_val1(const char* value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val1)
}
inline void CPutRequest::set_val1(const char* value, size_t size) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val1)
}
inline ::std::string* CPutRequest::mutable_val1() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val1)
  return val1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_val1() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val1)
  
  return val1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_val1(::std::string* val1) {
  if (val1 != NULL) {
    
  } else {
    
  }
  val1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val1);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val1)
}

// optional string val2 = 4;
inline void CPutRequest::clear_val2() {
  val2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::val2() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val2)
  return val2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_val2(const ::std::string& value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val2)
}
inline void CPutRequest::set_val2(const char* value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val2)
}
inline void CPutRequest::set_val2(const char* value, size_t size) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val2)
}
inline ::std::string* CPutRequest::mutable_val2() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val2)
  return val2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_val2() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val2)
  
  return val2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_val2(::std::string* val2) {
  if (val2 != NULL) {
    
  } else {
    
  }
  val2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val2);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val2)
}

// -------------------------------------------------------------------

// CPutResponse

// -------------------------------------------------------------------

// DeleteRequest

// optional string row = 1;
inline void DeleteRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.row)
}
inline void DeleteRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.row)
}
inline void DeleteRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.row)
}
inline ::std::string* DeleteRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.row)
}

// optional string col = 2;
inline void DeleteRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.col)
}
inline void DeleteRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.col)
}
inline void DeleteRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.col)
}
inline ::std::string* DeleteRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.col)
}

// -------------------------------------------------------------------

// DeleteResponse

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace storagequery

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_storage_5fquery_2eproto__INCLUDED
