// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage_query.proto

#ifndef PROTOBUF_storage_5fquery_2eproto__INCLUDED
#define PROTOBUF_storage_5fquery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace storagequery {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_storage_5fquery_2eproto();
void protobuf_AssignDesc_storage_5fquery_2eproto();
void protobuf_ShutdownFile_storage_5fquery_2eproto();

class AddNodeRequest;
class AddNodeResponse;
class CPutRequest;
class CPutResponse;
class DeleteRequest;
class DeleteResponse;
class GetAllNodesRequest;
class GetAllNodesResponse;
class GetDataRequest;
class GetDataResponse;
class GetNodeRequest;
class GetNodeResponse;
class GetReplicaRequest;
class GetReplicaResponse;
class GetRequest;
class GetResponse;
class MigrateRequest;
class MigrateResponse;
class PingRequest;
class PingResponse;
class PutRequest;
class PutResponse;

// ===================================================================

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  void Swap(GetRequest* other);

  // implements Message ----------------------------------------------

  inline GetRequest* New() const { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.GetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetResponse) */ {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  void Swap(GetResponse* other);

  // implements Message ----------------------------------------------

  inline GetResponse* New() const { return New(NULL); }

  GetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  void set_val(const char* value);
  void set_val(const void* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:storagequery.GetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  void Swap(PutRequest* other);

  // implements Message ----------------------------------------------

  inline PutRequest* New() const { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // optional bytes val = 3;
  void clear_val();
  static const int kValFieldNumber = 3;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  void set_val(const char* value);
  void set_val(const void* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:storagequery.PutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PutRequest* default_instance_;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  void Swap(PutResponse* other);

  // implements Message ----------------------------------------------

  inline PutResponse* New() const { return New(NULL); }

  PutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.PutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PutResponse* default_instance_;
};
// -------------------------------------------------------------------

class CPutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.CPutRequest) */ {
 public:
  CPutRequest();
  virtual ~CPutRequest();

  CPutRequest(const CPutRequest& from);

  inline CPutRequest& operator=(const CPutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CPutRequest& default_instance();

  void Swap(CPutRequest* other);

  // implements Message ----------------------------------------------

  inline CPutRequest* New() const { return New(NULL); }

  CPutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CPutRequest& from);
  void MergeFrom(const CPutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CPutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // optional bytes val1 = 3;
  void clear_val1();
  static const int kVal1FieldNumber = 3;
  const ::std::string& val1() const;
  void set_val1(const ::std::string& value);
  void set_val1(const char* value);
  void set_val1(const void* value, size_t size);
  ::std::string* mutable_val1();
  ::std::string* release_val1();
  void set_allocated_val1(::std::string* val1);

  // optional bytes val2 = 4;
  void clear_val2();
  static const int kVal2FieldNumber = 4;
  const ::std::string& val2() const;
  void set_val2(const ::std::string& value);
  void set_val2(const char* value);
  void set_val2(const void* value, size_t size);
  ::std::string* mutable_val2();
  ::std::string* release_val2();
  void set_allocated_val2(::std::string* val2);

  // @@protoc_insertion_point(class_scope:storagequery.CPutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  ::google::protobuf::internal::ArenaStringPtr val1_;
  ::google::protobuf::internal::ArenaStringPtr val2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static CPutRequest* default_instance_;
};
// -------------------------------------------------------------------

class CPutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.CPutResponse) */ {
 public:
  CPutResponse();
  virtual ~CPutResponse();

  CPutResponse(const CPutResponse& from);

  inline CPutResponse& operator=(const CPutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CPutResponse& default_instance();

  void Swap(CPutResponse* other);

  // implements Message ----------------------------------------------

  inline CPutResponse* New() const { return New(NULL); }

  CPutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CPutResponse& from);
  void MergeFrom(const CPutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CPutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.CPutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static CPutResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.DeleteRequest) */ {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();

  DeleteRequest(const DeleteRequest& from);

  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();

  void Swap(DeleteRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteRequest* New() const { return New(NULL); }

  DeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.DeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static DeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.DeleteResponse) */ {
 public:
  DeleteResponse();
  virtual ~DeleteResponse();

  DeleteResponse(const DeleteResponse& from);

  inline DeleteResponse& operator=(const DeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteResponse& default_instance();

  void Swap(DeleteResponse* other);

  // implements Message ----------------------------------------------

  inline DeleteResponse* New() const { return New(NULL); }

  DeleteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteResponse& from);
  void MergeFrom(const DeleteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.DeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static DeleteResponse* default_instance_;
};
// -------------------------------------------------------------------

class MigrateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.MigrateRequest) */ {
 public:
  MigrateRequest();
  virtual ~MigrateRequest();

  MigrateRequest(const MigrateRequest& from);

  inline MigrateRequest& operator=(const MigrateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateRequest& default_instance();

  void Swap(MigrateRequest* other);

  // implements Message ----------------------------------------------

  inline MigrateRequest* New() const { return New(NULL); }

  MigrateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MigrateRequest& from);
  void MergeFrom(const MigrateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MigrateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr = 1;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:storagequery.MigrateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static MigrateRequest* default_instance_;
};
// -------------------------------------------------------------------

class MigrateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.MigrateResponse) */ {
 public:
  MigrateResponse();
  virtual ~MigrateResponse();

  MigrateResponse(const MigrateResponse& from);

  inline MigrateResponse& operator=(const MigrateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateResponse& default_instance();

  void Swap(MigrateResponse* other);

  // implements Message ----------------------------------------------

  inline MigrateResponse* New() const { return New(NULL); }

  MigrateResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MigrateResponse& from);
  void MergeFrom(const MigrateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MigrateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:storagequery.MigrateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static MigrateResponse* default_instance_;
};
// -------------------------------------------------------------------

class PingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PingRequest) */ {
 public:
  PingRequest();
  virtual ~PingRequest();

  PingRequest(const PingRequest& from);

  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRequest& default_instance();

  void Swap(PingRequest* other);

  // implements Message ----------------------------------------------

  inline PingRequest* New() const { return New(NULL); }

  PingRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingRequest& from);
  void MergeFrom(const PingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.PingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PingRequest* default_instance_;
};
// -------------------------------------------------------------------

class PingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.PingResponse) */ {
 public:
  PingResponse();
  virtual ~PingResponse();

  PingResponse(const PingResponse& from);

  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingResponse& default_instance();

  void Swap(PingResponse* other);

  // implements Message ----------------------------------------------

  inline PingResponse* New() const { return New(NULL); }

  PingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingResponse& from);
  void MergeFrom(const PingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.PingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static PingResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddNodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.AddNodeRequest) */ {
 public:
  AddNodeRequest();
  virtual ~AddNodeRequest();

  AddNodeRequest(const AddNodeRequest& from);

  inline AddNodeRequest& operator=(const AddNodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddNodeRequest& default_instance();

  void Swap(AddNodeRequest* other);

  // implements Message ----------------------------------------------

  inline AddNodeRequest* New() const { return New(NULL); }

  AddNodeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddNodeRequest& from);
  void MergeFrom(const AddNodeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddNodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr = 1;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:storagequery.AddNodeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static AddNodeRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddNodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.AddNodeResponse) */ {
 public:
  AddNodeResponse();
  virtual ~AddNodeResponse();

  AddNodeResponse(const AddNodeResponse& from);

  inline AddNodeResponse& operator=(const AddNodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddNodeResponse& default_instance();

  void Swap(AddNodeResponse* other);

  // implements Message ----------------------------------------------

  inline AddNodeResponse* New() const { return New(NULL); }

  AddNodeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddNodeResponse& from);
  void MergeFrom(const AddNodeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddNodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string data_map = 1;
  void clear_data_map();
  static const int kDataMapFieldNumber = 1;
  const ::std::string& data_map() const;
  void set_data_map(const ::std::string& value);
  void set_data_map(const char* value);
  void set_data_map(const char* value, size_t size);
  ::std::string* mutable_data_map();
  ::std::string* release_data_map();
  void set_allocated_data_map(::std::string* data_map);

  // @@protoc_insertion_point(class_scope:storagequery.AddNodeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_map_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static AddNodeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetNodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetNodeRequest) */ {
 public:
  GetNodeRequest();
  virtual ~GetNodeRequest();

  GetNodeRequest(const GetNodeRequest& from);

  inline GetNodeRequest& operator=(const GetNodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNodeRequest& default_instance();

  void Swap(GetNodeRequest* other);

  // implements Message ----------------------------------------------

  inline GetNodeRequest* New() const { return New(NULL); }

  GetNodeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNodeRequest& from);
  void MergeFrom(const GetNodeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.GetNodeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetNodeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetNodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetNodeResponse) */ {
 public:
  GetNodeResponse();
  virtual ~GetNodeResponse();

  GetNodeResponse(const GetNodeResponse& from);

  inline GetNodeResponse& operator=(const GetNodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetNodeResponse& default_instance();

  void Swap(GetNodeResponse* other);

  // implements Message ----------------------------------------------

  inline GetNodeResponse* New() const { return New(NULL); }

  GetNodeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetNodeResponse& from);
  void MergeFrom(const GetNodeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetNodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr = 1;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:storagequery.GetNodeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetNodeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetReplicaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetReplicaRequest) */ {
 public:
  GetReplicaRequest();
  virtual ~GetReplicaRequest();

  GetReplicaRequest(const GetReplicaRequest& from);

  inline GetReplicaRequest& operator=(const GetReplicaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReplicaRequest& default_instance();

  void Swap(GetReplicaRequest* other);

  // implements Message ----------------------------------------------

  inline GetReplicaRequest* New() const { return New(NULL); }

  GetReplicaRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReplicaRequest& from);
  void MergeFrom(const GetReplicaRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetReplicaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string row = 1;
  void clear_row();
  static const int kRowFieldNumber = 1;
  const ::std::string& row() const;
  void set_row(const ::std::string& value);
  void set_row(const char* value);
  void set_row(const char* value, size_t size);
  ::std::string* mutable_row();
  ::std::string* release_row();
  void set_allocated_row(::std::string* row);

  // optional string col = 2;
  void clear_col();
  static const int kColFieldNumber = 2;
  const ::std::string& col() const;
  void set_col(const ::std::string& value);
  void set_col(const char* value);
  void set_col(const char* value, size_t size);
  ::std::string* mutable_col();
  ::std::string* release_col();
  void set_allocated_col(::std::string* col);

  // @@protoc_insertion_point(class_scope:storagequery.GetReplicaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr row_;
  ::google::protobuf::internal::ArenaStringPtr col_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetReplicaRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetReplicaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetReplicaResponse) */ {
 public:
  GetReplicaResponse();
  virtual ~GetReplicaResponse();

  GetReplicaResponse(const GetReplicaResponse& from);

  inline GetReplicaResponse& operator=(const GetReplicaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReplicaResponse& default_instance();

  void Swap(GetReplicaResponse* other);

  // implements Message ----------------------------------------------

  inline GetReplicaResponse* New() const { return New(NULL); }

  GetReplicaResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetReplicaResponse& from);
  void MergeFrom(const GetReplicaResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetReplicaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr = 1;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:storagequery.GetReplicaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetReplicaResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetDataRequest) */ {
 public:
  GetDataRequest();
  virtual ~GetDataRequest();

  GetDataRequest(const GetDataRequest& from);

  inline GetDataRequest& operator=(const GetDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataRequest& default_instance();

  void Swap(GetDataRequest* other);

  // implements Message ----------------------------------------------

  inline GetDataRequest* New() const { return New(NULL); }

  GetDataRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataRequest& from);
  void MergeFrom(const GetDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::uint32 start() const;
  void set_start(::google::protobuf::uint32 value);

  // optional uint32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:storagequery.GetDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDataResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetDataResponse) */ {
 public:
  GetDataResponse();
  virtual ~GetDataResponse();

  GetDataResponse(const GetDataResponse& from);

  inline GetDataResponse& operator=(const GetDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataResponse& default_instance();

  void Swap(GetDataResponse* other);

  // implements Message ----------------------------------------------

  inline GetDataResponse* New() const { return New(NULL); }

  GetDataResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataResponse& from);
  void MergeFrom(const GetDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional string data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:storagequery.GetDataResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetAllNodesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetAllNodesRequest) */ {
 public:
  GetAllNodesRequest();
  virtual ~GetAllNodesRequest();

  GetAllNodesRequest(const GetAllNodesRequest& from);

  inline GetAllNodesRequest& operator=(const GetAllNodesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllNodesRequest& default_instance();

  void Swap(GetAllNodesRequest* other);

  // implements Message ----------------------------------------------

  inline GetAllNodesRequest* New() const { return New(NULL); }

  GetAllNodesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllNodesRequest& from);
  void MergeFrom(const GetAllNodesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAllNodesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:storagequery.GetAllNodesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetAllNodesRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAllNodesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:storagequery.GetAllNodesResponse) */ {
 public:
  GetAllNodesResponse();
  virtual ~GetAllNodesResponse();

  GetAllNodesResponse(const GetAllNodesResponse& from);

  inline GetAllNodesResponse& operator=(const GetAllNodesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllNodesResponse& default_instance();

  void Swap(GetAllNodesResponse* other);

  // implements Message ----------------------------------------------

  inline GetAllNodesResponse* New() const { return New(NULL); }

  GetAllNodesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllNodesResponse& from);
  void MergeFrom(const GetAllNodesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAllNodesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string up = 1;
  void clear_up();
  static const int kUpFieldNumber = 1;
  const ::std::string& up() const;
  void set_up(const ::std::string& value);
  void set_up(const char* value);
  void set_up(const char* value, size_t size);
  ::std::string* mutable_up();
  ::std::string* release_up();
  void set_allocated_up(::std::string* up);

  // optional string down = 2;
  void clear_down();
  static const int kDownFieldNumber = 2;
  const ::std::string& down() const;
  void set_down(const ::std::string& value);
  void set_down(const char* value);
  void set_down(const char* value, size_t size);
  ::std::string* mutable_down();
  ::std::string* release_down();
  void set_allocated_down(::std::string* down);

  // @@protoc_insertion_point(class_scope:storagequery.GetAllNodesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr up_;
  ::google::protobuf::internal::ArenaStringPtr down_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_storage_5fquery_2eproto();
  friend void protobuf_AssignDesc_storage_5fquery_2eproto();
  friend void protobuf_ShutdownFile_storage_5fquery_2eproto();

  void InitAsDefaultInstance();
  static GetAllNodesResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// optional string row = 1;
inline void GetRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.row)
}
inline void GetRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.row)
}
inline void GetRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.row)
}
inline ::std::string* GetRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.row)
}

// optional string col = 2;
inline void GetRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.col)
}
inline void GetRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.col)
}
inline void GetRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.col)
}
inline ::std::string* GetRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.col)
}

// -------------------------------------------------------------------

// GetResponse

// optional bytes val = 1;
inline void GetResponse::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetResponse::val() const {
  // @@protoc_insertion_point(field_get:storagequery.GetResponse.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetResponse.val)
}
inline void GetResponse::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetResponse.val)
}
inline void GetResponse::set_val(const void* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetResponse.val)
}
inline ::std::string* GetResponse::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetResponse.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.GetResponse.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetResponse.val)
}

// -------------------------------------------------------------------

// PutRequest

// optional string row = 1;
inline void PutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.row)
}
inline void PutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.row)
}
inline void PutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.row)
}
inline ::std::string* PutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.row)
}

// optional string col = 2;
inline void PutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.col)
}
inline void PutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.col)
}
inline void PutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.col)
}
inline ::std::string* PutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.col)
}

// optional bytes val = 3;
inline void PutRequest::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::val() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.val)
}
inline void PutRequest::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.val)
}
inline void PutRequest::set_val(const void* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.val)
}
inline ::std::string* PutRequest::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.val)
}

// -------------------------------------------------------------------

// PutResponse

// -------------------------------------------------------------------

// CPutRequest

// optional string row = 1;
inline void CPutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.row)
}
inline void CPutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.row)
}
inline void CPutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.row)
}
inline ::std::string* CPutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.row)
}

// optional string col = 2;
inline void CPutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.col)
}
inline void CPutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.col)
}
inline void CPutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.col)
}
inline ::std::string* CPutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.col)
}

// optional bytes val1 = 3;
inline void CPutRequest::clear_val1() {
  val1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::val1() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val1)
  return val1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_val1(const ::std::string& value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val1)
}
inline void CPutRequest::set_val1(const char* value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val1)
}
inline void CPutRequest::set_val1(const void* value, size_t size) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val1)
}
inline ::std::string* CPutRequest::mutable_val1() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val1)
  return val1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_val1() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val1)
  
  return val1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_val1(::std::string* val1) {
  if (val1 != NULL) {
    
  } else {
    
  }
  val1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val1);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val1)
}

// optional bytes val2 = 4;
inline void CPutRequest::clear_val2() {
  val2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CPutRequest::val2() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val2)
  return val2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_val2(const ::std::string& value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val2)
}
inline void CPutRequest::set_val2(const char* value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val2)
}
inline void CPutRequest::set_val2(const void* value, size_t size) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val2)
}
inline ::std::string* CPutRequest::mutable_val2() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val2)
  return val2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CPutRequest::release_val2() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val2)
  
  return val2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CPutRequest::set_allocated_val2(::std::string* val2) {
  if (val2 != NULL) {
    
  } else {
    
  }
  val2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val2);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val2)
}

// -------------------------------------------------------------------

// CPutResponse

// -------------------------------------------------------------------

// DeleteRequest

// optional string row = 1;
inline void DeleteRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.row)
}
inline void DeleteRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.row)
}
inline void DeleteRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.row)
}
inline ::std::string* DeleteRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.row)
}

// optional string col = 2;
inline void DeleteRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.col)
}
inline void DeleteRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.col)
}
inline void DeleteRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.col)
}
inline ::std::string* DeleteRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.col)
}

// -------------------------------------------------------------------

// DeleteResponse

// -------------------------------------------------------------------

// MigrateRequest

// optional string addr = 1;
inline void MigrateRequest::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateRequest::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.MigrateRequest.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateRequest::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.MigrateRequest.addr)
}
inline void MigrateRequest::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.MigrateRequest.addr)
}
inline void MigrateRequest::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.MigrateRequest.addr)
}
inline ::std::string* MigrateRequest::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.MigrateRequest.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateRequest::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.MigrateRequest.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateRequest::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.MigrateRequest.addr)
}

// -------------------------------------------------------------------

// MigrateResponse

// optional string data = 1;
inline void MigrateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateResponse::data() const {
  // @@protoc_insertion_point(field_get:storagequery.MigrateResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.MigrateResponse.data)
}
inline void MigrateResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.MigrateResponse.data)
}
inline void MigrateResponse::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.MigrateResponse.data)
}
inline ::std::string* MigrateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.MigrateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateResponse::release_data() {
  // @@protoc_insertion_point(field_release:storagequery.MigrateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:storagequery.MigrateResponse.data)
}

// -------------------------------------------------------------------

// PingRequest

// -------------------------------------------------------------------

// PingResponse

// -------------------------------------------------------------------

// AddNodeRequest

// optional string addr = 1;
inline void AddNodeRequest::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddNodeRequest::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.AddNodeRequest.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddNodeRequest::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.AddNodeRequest.addr)
}
inline void AddNodeRequest::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.AddNodeRequest.addr)
}
inline void AddNodeRequest::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.AddNodeRequest.addr)
}
inline ::std::string* AddNodeRequest::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.AddNodeRequest.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddNodeRequest::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.AddNodeRequest.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddNodeRequest::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.AddNodeRequest.addr)
}

// -------------------------------------------------------------------

// AddNodeResponse

// optional string data_map = 1;
inline void AddNodeResponse::clear_data_map() {
  data_map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddNodeResponse::data_map() const {
  // @@protoc_insertion_point(field_get:storagequery.AddNodeResponse.data_map)
  return data_map_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddNodeResponse::set_data_map(const ::std::string& value) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.AddNodeResponse.data_map)
}
inline void AddNodeResponse::set_data_map(const char* value) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.AddNodeResponse.data_map)
}
inline void AddNodeResponse::set_data_map(const char* value, size_t size) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.AddNodeResponse.data_map)
}
inline ::std::string* AddNodeResponse::mutable_data_map() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.AddNodeResponse.data_map)
  return data_map_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddNodeResponse::release_data_map() {
  // @@protoc_insertion_point(field_release:storagequery.AddNodeResponse.data_map)
  
  return data_map_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddNodeResponse::set_allocated_data_map(::std::string* data_map) {
  if (data_map != NULL) {
    
  } else {
    
  }
  data_map_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_map);
  // @@protoc_insertion_point(field_set_allocated:storagequery.AddNodeResponse.data_map)
}

// -------------------------------------------------------------------

// GetNodeRequest

// optional string row = 1;
inline void GetNodeRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNodeRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeRequest.row)
}
inline void GetNodeRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeRequest.row)
}
inline void GetNodeRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeRequest.row)
}
inline ::std::string* GetNodeRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNodeRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeRequest.row)
}

// optional string col = 2;
inline void GetNodeRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNodeRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeRequest.col)
}
inline void GetNodeRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeRequest.col)
}
inline void GetNodeRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeRequest.col)
}
inline ::std::string* GetNodeRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNodeRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeRequest.col)
}

// -------------------------------------------------------------------

// GetNodeResponse

// optional string addr = 1;
inline void GetNodeResponse::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetNodeResponse::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeResponse.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeResponse::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeResponse.addr)
}
inline void GetNodeResponse::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeResponse.addr)
}
inline void GetNodeResponse::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeResponse.addr)
}
inline ::std::string* GetNodeResponse::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeResponse.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetNodeResponse::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeResponse.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetNodeResponse::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeResponse.addr)
}

// -------------------------------------------------------------------

// GetReplicaRequest

// optional string row = 1;
inline void GetReplicaRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetReplicaRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaRequest.row)
}
inline void GetReplicaRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaRequest.row)
}
inline void GetReplicaRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaRequest.row)
}
inline ::std::string* GetReplicaRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetReplicaRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaRequest.row)
}

// optional string col = 2;
inline void GetReplicaRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetReplicaRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaRequest.col)
}
inline void GetReplicaRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaRequest.col)
}
inline void GetReplicaRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaRequest.col)
}
inline ::std::string* GetReplicaRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetReplicaRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaRequest.col)
}

// -------------------------------------------------------------------

// GetReplicaResponse

// optional string addr = 1;
inline void GetReplicaResponse::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetReplicaResponse::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaResponse.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaResponse::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaResponse.addr)
}
inline void GetReplicaResponse::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaResponse.addr)
}
inline void GetReplicaResponse::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaResponse.addr)
}
inline ::std::string* GetReplicaResponse::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaResponse.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetReplicaResponse::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaResponse.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReplicaResponse::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaResponse.addr)
}

// -------------------------------------------------------------------

// GetDataRequest

// optional uint32 start = 1;
inline void GetDataRequest::clear_start() {
  start_ = 0u;
}
inline ::google::protobuf::uint32 GetDataRequest::start() const {
  // @@protoc_insertion_point(field_get:storagequery.GetDataRequest.start)
  return start_;
}
inline void GetDataRequest::set_start(::google::protobuf::uint32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:storagequery.GetDataRequest.start)
}

// optional uint32 size = 2;
inline void GetDataRequest::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 GetDataRequest::size() const {
  // @@protoc_insertion_point(field_get:storagequery.GetDataRequest.size)
  return size_;
}
inline void GetDataRequest::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:storagequery.GetDataRequest.size)
}

// -------------------------------------------------------------------

// GetDataResponse

// optional uint32 size = 1;
inline void GetDataResponse::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 GetDataResponse::size() const {
  // @@protoc_insertion_point(field_get:storagequery.GetDataResponse.size)
  return size_;
}
inline void GetDataResponse::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:storagequery.GetDataResponse.size)
}

// optional string data = 2;
inline void GetDataResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDataResponse::data() const {
  // @@protoc_insertion_point(field_get:storagequery.GetDataResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDataResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetDataResponse.data)
}
inline void GetDataResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetDataResponse.data)
}
inline void GetDataResponse::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetDataResponse.data)
}
inline ::std::string* GetDataResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetDataResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDataResponse::release_data() {
  // @@protoc_insertion_point(field_release:storagequery.GetDataResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDataResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetDataResponse.data)
}

// -------------------------------------------------------------------

// GetAllNodesRequest

// -------------------------------------------------------------------

// GetAllNodesResponse

// optional string up = 1;
inline void GetAllNodesResponse::clear_up() {
  up_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAllNodesResponse::up() const {
  // @@protoc_insertion_point(field_get:storagequery.GetAllNodesResponse.up)
  return up_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAllNodesResponse::set_up(const ::std::string& value) {
  
  up_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetAllNodesResponse.up)
}
inline void GetAllNodesResponse::set_up(const char* value) {
  
  up_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetAllNodesResponse.up)
}
inline void GetAllNodesResponse::set_up(const char* value, size_t size) {
  
  up_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetAllNodesResponse.up)
}
inline ::std::string* GetAllNodesResponse::mutable_up() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetAllNodesResponse.up)
  return up_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAllNodesResponse::release_up() {
  // @@protoc_insertion_point(field_release:storagequery.GetAllNodesResponse.up)
  
  return up_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAllNodesResponse::set_allocated_up(::std::string* up) {
  if (up != NULL) {
    
  } else {
    
  }
  up_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), up);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetAllNodesResponse.up)
}

// optional string down = 2;
inline void GetAllNodesResponse::clear_down() {
  down_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAllNodesResponse::down() const {
  // @@protoc_insertion_point(field_get:storagequery.GetAllNodesResponse.down)
  return down_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAllNodesResponse::set_down(const ::std::string& value) {
  
  down_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetAllNodesResponse.down)
}
inline void GetAllNodesResponse::set_down(const char* value) {
  
  down_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetAllNodesResponse.down)
}
inline void GetAllNodesResponse::set_down(const char* value, size_t size) {
  
  down_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetAllNodesResponse.down)
}
inline ::std::string* GetAllNodesResponse::mutable_down() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetAllNodesResponse.down)
  return down_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAllNodesResponse::release_down() {
  // @@protoc_insertion_point(field_release:storagequery.GetAllNodesResponse.down)
  
  return down_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAllNodesResponse::set_allocated_down(::std::string* down) {
  if (down != NULL) {
    
  } else {
    
  }
  down_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), down);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetAllNodesResponse.down)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace storagequery

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_storage_5fquery_2eproto__INCLUDED
