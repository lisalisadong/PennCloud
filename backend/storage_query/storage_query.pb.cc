// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage_query.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "storage_query.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace storagequery {

namespace {

const ::google::protobuf::Descriptor* GetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPutRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPutRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPutResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPutResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MigrateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MigrateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MigrateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MigrateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetReplicaRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetReplicaRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetReplicaResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetReplicaResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_storage_5fquery_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_storage_5fquery_2eproto() {
  protobuf_AddDesc_storage_5fquery_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "storage_query.proto");
  GOOGLE_CHECK(file != NULL);
  GetRequest_descriptor_ = file->message_type(0);
  static const int GetRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, col_),
  };
  GetRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRequest_descriptor_,
      GetRequest::default_instance_,
      GetRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _is_default_instance_));
  GetResponse_descriptor_ = file->message_type(1);
  static const int GetResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, val_),
  };
  GetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetResponse_descriptor_,
      GetResponse::default_instance_,
      GetResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _is_default_instance_));
  PutRequest_descriptor_ = file->message_type(2);
  static const int PutRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, col_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, val_),
  };
  PutRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutRequest_descriptor_,
      PutRequest::default_instance_,
      PutRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PutRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, _is_default_instance_));
  PutResponse_descriptor_ = file->message_type(3);
  static const int PutResponse_offsets_[1] = {
  };
  PutResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutResponse_descriptor_,
      PutResponse::default_instance_,
      PutResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PutResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutResponse, _is_default_instance_));
  CPutRequest_descriptor_ = file->message_type(4);
  static const int CPutRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, col_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, val1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, val2_),
  };
  CPutRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPutRequest_descriptor_,
      CPutRequest::default_instance_,
      CPutRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPutRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutRequest, _is_default_instance_));
  CPutResponse_descriptor_ = file->message_type(5);
  static const int CPutResponse_offsets_[1] = {
  };
  CPutResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPutResponse_descriptor_,
      CPutResponse::default_instance_,
      CPutResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPutResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPutResponse, _is_default_instance_));
  DeleteRequest_descriptor_ = file->message_type(6);
  static const int DeleteRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, col_),
  };
  DeleteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteRequest_descriptor_,
      DeleteRequest::default_instance_,
      DeleteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, _is_default_instance_));
  DeleteResponse_descriptor_ = file->message_type(7);
  static const int DeleteResponse_offsets_[1] = {
  };
  DeleteResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteResponse_descriptor_,
      DeleteResponse::default_instance_,
      DeleteResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponse, _is_default_instance_));
  MigrateRequest_descriptor_ = file->message_type(8);
  static const int MigrateRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateRequest, addr_),
  };
  MigrateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MigrateRequest_descriptor_,
      MigrateRequest::default_instance_,
      MigrateRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MigrateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateRequest, _is_default_instance_));
  MigrateResponse_descriptor_ = file->message_type(9);
  static const int MigrateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateResponse, data_),
  };
  MigrateResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MigrateResponse_descriptor_,
      MigrateResponse::default_instance_,
      MigrateResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MigrateResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MigrateResponse, _is_default_instance_));
  PingRequest_descriptor_ = file->message_type(10);
  static const int PingRequest_offsets_[1] = {
  };
  PingRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingRequest_descriptor_,
      PingRequest::default_instance_,
      PingRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PingRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, _is_default_instance_));
  PingResponse_descriptor_ = file->message_type(11);
  static const int PingResponse_offsets_[1] = {
  };
  PingResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingResponse_descriptor_,
      PingResponse::default_instance_,
      PingResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PingResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _is_default_instance_));
  AddNodeRequest_descriptor_ = file->message_type(12);
  static const int AddNodeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeRequest, addr_),
  };
  AddNodeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddNodeRequest_descriptor_,
      AddNodeRequest::default_instance_,
      AddNodeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddNodeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeRequest, _is_default_instance_));
  AddNodeResponse_descriptor_ = file->message_type(13);
  static const int AddNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeResponse, data_map_),
  };
  AddNodeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddNodeResponse_descriptor_,
      AddNodeResponse::default_instance_,
      AddNodeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddNodeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddNodeResponse, _is_default_instance_));
  GetNodeRequest_descriptor_ = file->message_type(14);
  static const int GetNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeRequest, col_),
  };
  GetNodeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNodeRequest_descriptor_,
      GetNodeRequest::default_instance_,
      GetNodeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNodeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeRequest, _is_default_instance_));
  GetNodeResponse_descriptor_ = file->message_type(15);
  static const int GetNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeResponse, addr_),
  };
  GetNodeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNodeResponse_descriptor_,
      GetNodeResponse::default_instance_,
      GetNodeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetNodeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeResponse, _is_default_instance_));
  GetReplicaRequest_descriptor_ = file->message_type(16);
  static const int GetReplicaRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaRequest, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaRequest, col_),
  };
  GetReplicaRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetReplicaRequest_descriptor_,
      GetReplicaRequest::default_instance_,
      GetReplicaRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetReplicaRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaRequest, _is_default_instance_));
  GetReplicaResponse_descriptor_ = file->message_type(17);
  static const int GetReplicaResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaResponse, addr_),
  };
  GetReplicaResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetReplicaResponse_descriptor_,
      GetReplicaResponse::default_instance_,
      GetReplicaResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetReplicaResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetReplicaResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_storage_5fquery_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRequest_descriptor_, &GetRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetResponse_descriptor_, &GetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutRequest_descriptor_, &PutRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutResponse_descriptor_, &PutResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPutRequest_descriptor_, &CPutRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPutResponse_descriptor_, &CPutResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteRequest_descriptor_, &DeleteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteResponse_descriptor_, &DeleteResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MigrateRequest_descriptor_, &MigrateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MigrateResponse_descriptor_, &MigrateResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingRequest_descriptor_, &PingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingResponse_descriptor_, &PingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddNodeRequest_descriptor_, &AddNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddNodeResponse_descriptor_, &AddNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNodeRequest_descriptor_, &GetNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNodeResponse_descriptor_, &GetNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetReplicaRequest_descriptor_, &GetReplicaRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetReplicaResponse_descriptor_, &GetReplicaResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_storage_5fquery_2eproto() {
  delete GetRequest::default_instance_;
  delete GetRequest_reflection_;
  delete GetResponse::default_instance_;
  delete GetResponse_reflection_;
  delete PutRequest::default_instance_;
  delete PutRequest_reflection_;
  delete PutResponse::default_instance_;
  delete PutResponse_reflection_;
  delete CPutRequest::default_instance_;
  delete CPutRequest_reflection_;
  delete CPutResponse::default_instance_;
  delete CPutResponse_reflection_;
  delete DeleteRequest::default_instance_;
  delete DeleteRequest_reflection_;
  delete DeleteResponse::default_instance_;
  delete DeleteResponse_reflection_;
  delete MigrateRequest::default_instance_;
  delete MigrateRequest_reflection_;
  delete MigrateResponse::default_instance_;
  delete MigrateResponse_reflection_;
  delete PingRequest::default_instance_;
  delete PingRequest_reflection_;
  delete PingResponse::default_instance_;
  delete PingResponse_reflection_;
  delete AddNodeRequest::default_instance_;
  delete AddNodeRequest_reflection_;
  delete AddNodeResponse::default_instance_;
  delete AddNodeResponse_reflection_;
  delete GetNodeRequest::default_instance_;
  delete GetNodeRequest_reflection_;
  delete GetNodeResponse::default_instance_;
  delete GetNodeResponse_reflection_;
  delete GetReplicaRequest::default_instance_;
  delete GetReplicaRequest_reflection_;
  delete GetReplicaResponse::default_instance_;
  delete GetReplicaResponse_reflection_;
}

void protobuf_AddDesc_storage_5fquery_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_storage_5fquery_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023storage_query.proto\022\014storagequery\"&\n\nG"
    "etRequest\022\013\n\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\"\032\n\013G"
    "etResponse\022\013\n\003val\030\001 \001(\014\"3\n\nPutRequest\022\013\n"
    "\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\022\013\n\003val\030\003 \001(\014\"\r\n\013"
    "PutResponse\"C\n\013CPutRequest\022\013\n\003row\030\001 \001(\t\022"
    "\013\n\003col\030\002 \001(\t\022\014\n\004val1\030\003 \001(\014\022\014\n\004val2\030\004 \001(\014"
    "\"\016\n\014CPutResponse\")\n\rDeleteRequest\022\013\n\003row"
    "\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\"\020\n\016DeleteResponse\"\036\n"
    "\016MigrateRequest\022\014\n\004addr\030\001 \001(\t\"\037\n\017Migrate"
    "Response\022\014\n\004data\030\001 \001(\t\"\r\n\013PingRequest\"\016\n"
    "\014PingResponse\"\036\n\016AddNodeRequest\022\014\n\004addr\030"
    "\001 \001(\t\"#\n\017AddNodeResponse\022\020\n\010data_map\030\001 \001"
    "(\t\"*\n\016GetNodeRequest\022\013\n\003row\030\001 \001(\t\022\013\n\003col"
    "\030\002 \001(\t\"\037\n\017GetNodeResponse\022\014\n\004addr\030\001 \001(\t\""
    "-\n\021GetReplicaRequest\022\013\n\003row\030\001 \001(\t\022\013\n\003col"
    "\030\002 \001(\t\"\"\n\022GetReplicaResponse\022\014\n\004addr\030\001 \001"
    "(\t2\321\005\n\014StorageQuery\022<\n\003Get\022\030.storagequer"
    "y.GetRequest\032\031.storagequery.GetResponse\""
    "\000\022<\n\003Put\022\030.storagequery.PutRequest\032\031.sto"
    "ragequery.PutResponse\"\000\022\?\n\004CPut\022\031.storag"
    "equery.CPutRequest\032\032.storagequery.CPutRe"
    "sponse\"\000\022E\n\006Delete\022\033.storagequery.Delete"
    "Request\032\034.storagequery.DeleteResponse\"\000\022"
    "H\n\007Migrate\022\034.storagequery.MigrateRequest"
    "\032\035.storagequery.MigrateResponse\"\000\022\?\n\004Pin"
    "g\022\031.storagequery.PingRequest\032\032.storagequ"
    "ery.PingResponse\"\000\022H\n\007AddNode\022\034.storageq"
    "uery.AddNodeRequest\032\035.storagequery.AddNo"
    "deResponse\"\000\022H\n\007GetNode\022\034.storagequery.G"
    "etNodeRequest\032\035.storagequery.GetNodeResp"
    "onse\"\000\022Q\n\nGetReplica\022\037.storagequery.GetR"
    "eplicaRequest\032 .storagequery.GetReplicaR"
    "esponse\"\000\022K\n\nDeleteNode\022\034.storagequery.G"
    "etNodeRequest\032\035.storagequery.GetNodeResp"
    "onse\"\000b\006proto3", 1374);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storage_query.proto", &protobuf_RegisterTypes);
  GetRequest::default_instance_ = new GetRequest();
  GetResponse::default_instance_ = new GetResponse();
  PutRequest::default_instance_ = new PutRequest();
  PutResponse::default_instance_ = new PutResponse();
  CPutRequest::default_instance_ = new CPutRequest();
  CPutResponse::default_instance_ = new CPutResponse();
  DeleteRequest::default_instance_ = new DeleteRequest();
  DeleteResponse::default_instance_ = new DeleteResponse();
  MigrateRequest::default_instance_ = new MigrateRequest();
  MigrateResponse::default_instance_ = new MigrateResponse();
  PingRequest::default_instance_ = new PingRequest();
  PingResponse::default_instance_ = new PingResponse();
  AddNodeRequest::default_instance_ = new AddNodeRequest();
  AddNodeResponse::default_instance_ = new AddNodeResponse();
  GetNodeRequest::default_instance_ = new GetNodeRequest();
  GetNodeResponse::default_instance_ = new GetNodeResponse();
  GetReplicaRequest::default_instance_ = new GetReplicaRequest();
  GetReplicaResponse::default_instance_ = new GetReplicaResponse();
  GetRequest::default_instance_->InitAsDefaultInstance();
  GetResponse::default_instance_->InitAsDefaultInstance();
  PutRequest::default_instance_->InitAsDefaultInstance();
  PutResponse::default_instance_->InitAsDefaultInstance();
  CPutRequest::default_instance_->InitAsDefaultInstance();
  CPutResponse::default_instance_->InitAsDefaultInstance();
  DeleteRequest::default_instance_->InitAsDefaultInstance();
  DeleteResponse::default_instance_->InitAsDefaultInstance();
  MigrateRequest::default_instance_->InitAsDefaultInstance();
  MigrateResponse::default_instance_->InitAsDefaultInstance();
  PingRequest::default_instance_->InitAsDefaultInstance();
  PingResponse::default_instance_->InitAsDefaultInstance();
  AddNodeRequest::default_instance_->InitAsDefaultInstance();
  AddNodeResponse::default_instance_->InitAsDefaultInstance();
  GetNodeRequest::default_instance_->InitAsDefaultInstance();
  GetNodeResponse::default_instance_->InitAsDefaultInstance();
  GetReplicaRequest::default_instance_->InitAsDefaultInstance();
  GetReplicaResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_storage_5fquery_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_storage_5fquery_2eproto {
  StaticDescriptorInitializer_storage_5fquery_2eproto() {
    protobuf_AddDesc_storage_5fquery_2eproto();
  }
} static_descriptor_initializer_storage_5fquery_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kRowFieldNumber;
const int GetRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetRequest)
}

void GetRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetRequest)
}

void GetRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:storagequery.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRequest_descriptor_;
}

const GetRequest& GetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetRequest* GetRequest::default_instance_ = NULL;

GetRequest* GetRequest::New(::google::protobuf::Arena* arena) const {
  GetRequest* n = new GetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetRequest)
  return target;
}

int GetRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {

  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRequest_descriptor_;
  metadata.reflection = GetRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// optional string row = 1;
void GetRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.row)
}
 void GetRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.row)
}
 void GetRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.row)
}
 ::std::string* GetRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.row)
}

// optional string col = 2;
void GetRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetRequest.col)
}
 void GetRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetRequest.col)
}
 void GetRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetRequest.col)
}
 ::std::string* GetRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetRequest.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetResponse)
}

void GetResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetResponse)
}

void GetResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:storagequery.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetResponse_descriptor_;
}

const GetResponse& GetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetResponse* GetResponse::default_instance_ = NULL;

GetResponse* GetResponse::New(::google::protobuf::Arena* arena) const {
  GetResponse* n = new GetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetResponse)
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes val = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetResponse)
  // optional bytes val = 1;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetResponse)
  // optional bytes val = 1;
  if (this->val().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetResponse)
  return target;
}

int GetResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetResponse)
  int total_size = 0;

  // optional bytes val = 1;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {

  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  val_.Swap(&other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetResponse_descriptor_;
  metadata.reflection = GetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResponse

// optional bytes val = 1;
void GetResponse::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetResponse::val() const {
  // @@protoc_insertion_point(field_get:storagequery.GetResponse.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetResponse::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetResponse.val)
}
 void GetResponse::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetResponse.val)
}
 void GetResponse::set_val(const void* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetResponse.val)
}
 ::std::string* GetResponse::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetResponse.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetResponse::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.GetResponse.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetResponse::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetResponse.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutRequest::kRowFieldNumber;
const int PutRequest::kColFieldNumber;
const int PutRequest::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutRequest::PutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.PutRequest)
}

void PutRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PutRequest::PutRequest(const PutRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.PutRequest)
}

void PutRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:storagequery.PutRequest)
  SharedDtor();
}

void PutRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutRequest_descriptor_;
}

const PutRequest& PutRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

PutRequest* PutRequest::default_instance_ = NULL;

PutRequest* PutRequest::New(::google::protobuf::Arena* arena) const {
  PutRequest* n = new PutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.PutRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.PutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.PutRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.PutRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_val;
        break;
      }

      // optional bytes val = 3;
      case 3: {
        if (tag == 26) {
         parse_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.PutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.PutRequest)
  return false;
#undef DO_
}

void PutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.PutRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.PutRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.PutRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // optional bytes val = 3;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.PutRequest)
}

::google::protobuf::uint8* PutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.PutRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.PutRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.PutRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // optional bytes val = 3;
  if (this->val().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.PutRequest)
  return target;
}

int PutRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.PutRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  // optional bytes val = 3;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.PutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PutRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.PutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.PutRequest)
    MergeFrom(*source);
  }
}

void PutRequest::MergeFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.PutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void PutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRequest::IsInitialized() const {

  return true;
}

void PutRequest::Swap(PutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutRequest::InternalSwap(PutRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  val_.Swap(&other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutRequest_descriptor_;
  metadata.reflection = PutRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutRequest

// optional string row = 1;
void PutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.row)
}
 void PutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.row)
}
 void PutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.row)
}
 ::std::string* PutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.row)
}

// optional string col = 2;
void PutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.col)
}
 void PutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.col)
}
 void PutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.col)
}
 ::std::string* PutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.col)
}

// optional bytes val = 3;
void PutRequest::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PutRequest::val() const {
  // @@protoc_insertion_point(field_get:storagequery.PutRequest.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.PutRequest.val)
}
 void PutRequest::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.PutRequest.val)
}
 void PutRequest::set_val(const void* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.PutRequest.val)
}
 ::std::string* PutRequest::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.PutRequest.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PutRequest::release_val() {
  // @@protoc_insertion_point(field_release:storagequery.PutRequest.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PutRequest::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:storagequery.PutRequest.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutResponse::PutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.PutResponse)
}

void PutResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PutResponse::PutResponse(const PutResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.PutResponse)
}

void PutResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PutResponse::~PutResponse() {
  // @@protoc_insertion_point(destructor:storagequery.PutResponse)
  SharedDtor();
}

void PutResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutResponse_descriptor_;
}

const PutResponse& PutResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

PutResponse* PutResponse::default_instance_ = NULL;

PutResponse* PutResponse::New(::google::protobuf::Arena* arena) const {
  PutResponse* n = new PutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.PutResponse)
}

bool PutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.PutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.PutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.PutResponse)
  return false;
#undef DO_
}

void PutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.PutResponse)
  // @@protoc_insertion_point(serialize_end:storagequery.PutResponse)
}

::google::protobuf::uint8* PutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.PutResponse)
  // @@protoc_insertion_point(serialize_to_array_end:storagequery.PutResponse)
  return target;
}

int PutResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.PutResponse)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.PutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PutResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.PutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.PutResponse)
    MergeFrom(*source);
  }
}

void PutResponse::MergeFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.PutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutResponse::CopyFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutResponse::IsInitialized() const {

  return true;
}

void PutResponse::Swap(PutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutResponse::InternalSwap(PutResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutResponse_descriptor_;
  metadata.reflection = PutResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPutRequest::kRowFieldNumber;
const int CPutRequest::kColFieldNumber;
const int CPutRequest::kVal1FieldNumber;
const int CPutRequest::kVal2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPutRequest::CPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.CPutRequest)
}

void CPutRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CPutRequest::CPutRequest(const CPutRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.CPutRequest)
}

void CPutRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CPutRequest::~CPutRequest() {
  // @@protoc_insertion_point(destructor:storagequery.CPutRequest)
  SharedDtor();
}

void CPutRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CPutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPutRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPutRequest_descriptor_;
}

const CPutRequest& CPutRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

CPutRequest* CPutRequest::default_instance_ = NULL;

CPutRequest* CPutRequest::New(::google::protobuf::Arena* arena) const {
  CPutRequest* n = new CPutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.CPutRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.CPutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.CPutRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.CPutRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_val1;
        break;
      }

      // optional bytes val1 = 3;
      case 3: {
        if (tag == 26) {
         parse_val1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_val1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_val2;
        break;
      }

      // optional bytes val2 = 4;
      case 4: {
        if (tag == 34) {
         parse_val2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_val2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.CPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.CPutRequest)
  return false;
#undef DO_
}

void CPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.CPutRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.CPutRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.CPutRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // optional bytes val1 = 3;
  if (this->val1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->val1(), output);
  }

  // optional bytes val2 = 4;
  if (this->val2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->val2(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.CPutRequest)
}

::google::protobuf::uint8* CPutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.CPutRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.CPutRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.CPutRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // optional bytes val1 = 3;
  if (this->val1().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->val1(), target);
  }

  // optional bytes val2 = 4;
  if (this->val2().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->val2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.CPutRequest)
  return target;
}

int CPutRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.CPutRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  // optional bytes val1 = 3;
  if (this->val1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->val1());
  }

  // optional bytes val2 = 4;
  if (this->val2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->val2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.CPutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CPutRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CPutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.CPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.CPutRequest)
    MergeFrom(*source);
  }
}

void CPutRequest::MergeFrom(const CPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.CPutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
  if (from.val1().size() > 0) {

    val1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val1_);
  }
  if (from.val2().size() > 0) {

    val2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val2_);
  }
}

void CPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.CPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPutRequest::CopyFrom(const CPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.CPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPutRequest::IsInitialized() const {

  return true;
}

void CPutRequest::Swap(CPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPutRequest::InternalSwap(CPutRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  val1_.Swap(&other->val1_);
  val2_.Swap(&other->val2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPutRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPutRequest_descriptor_;
  metadata.reflection = CPutRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPutRequest

// optional string row = 1;
void CPutRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CPutRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.row)
}
 void CPutRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.row)
}
 void CPutRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.row)
}
 ::std::string* CPutRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CPutRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.row)
}

// optional string col = 2;
void CPutRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CPutRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.col)
}
 void CPutRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.col)
}
 void CPutRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.col)
}
 ::std::string* CPutRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CPutRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.col)
}

// optional bytes val1 = 3;
void CPutRequest::clear_val1() {
  val1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CPutRequest::val1() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val1)
  return val1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_val1(const ::std::string& value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val1)
}
 void CPutRequest::set_val1(const char* value) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val1)
}
 void CPutRequest::set_val1(const void* value, size_t size) {
  
  val1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val1)
}
 ::std::string* CPutRequest::mutable_val1() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val1)
  return val1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CPutRequest::release_val1() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val1)
  
  return val1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_allocated_val1(::std::string* val1) {
  if (val1 != NULL) {
    
  } else {
    
  }
  val1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val1);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val1)
}

// optional bytes val2 = 4;
void CPutRequest::clear_val2() {
  val2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CPutRequest::val2() const {
  // @@protoc_insertion_point(field_get:storagequery.CPutRequest.val2)
  return val2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_val2(const ::std::string& value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.CPutRequest.val2)
}
 void CPutRequest::set_val2(const char* value) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.CPutRequest.val2)
}
 void CPutRequest::set_val2(const void* value, size_t size) {
  
  val2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.CPutRequest.val2)
}
 ::std::string* CPutRequest::mutable_val2() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.CPutRequest.val2)
  return val2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CPutRequest::release_val2() {
  // @@protoc_insertion_point(field_release:storagequery.CPutRequest.val2)
  
  return val2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CPutRequest::set_allocated_val2(::std::string* val2) {
  if (val2 != NULL) {
    
  } else {
    
  }
  val2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val2);
  // @@protoc_insertion_point(field_set_allocated:storagequery.CPutRequest.val2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPutResponse::CPutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.CPutResponse)
}

void CPutResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CPutResponse::CPutResponse(const CPutResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.CPutResponse)
}

void CPutResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CPutResponse::~CPutResponse() {
  // @@protoc_insertion_point(destructor:storagequery.CPutResponse)
  SharedDtor();
}

void CPutResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CPutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPutResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPutResponse_descriptor_;
}

const CPutResponse& CPutResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

CPutResponse* CPutResponse::default_instance_ = NULL;

CPutResponse* CPutResponse::New(::google::protobuf::Arena* arena) const {
  CPutResponse* n = new CPutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.CPutResponse)
}

bool CPutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.CPutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.CPutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.CPutResponse)
  return false;
#undef DO_
}

void CPutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.CPutResponse)
  // @@protoc_insertion_point(serialize_end:storagequery.CPutResponse)
}

::google::protobuf::uint8* CPutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.CPutResponse)
  // @@protoc_insertion_point(serialize_to_array_end:storagequery.CPutResponse)
  return target;
}

int CPutResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.CPutResponse)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.CPutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CPutResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CPutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.CPutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.CPutResponse)
    MergeFrom(*source);
  }
}

void CPutResponse::MergeFrom(const CPutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.CPutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void CPutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.CPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPutResponse::CopyFrom(const CPutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.CPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPutResponse::IsInitialized() const {

  return true;
}

void CPutResponse::Swap(CPutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPutResponse::InternalSwap(CPutResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPutResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPutResponse_descriptor_;
  metadata.reflection = CPutResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPutResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kRowFieldNumber;
const int DeleteRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.DeleteRequest)
}

void DeleteRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:storagequery.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteRequest_descriptor_;
}

const DeleteRequest& DeleteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

DeleteRequest* DeleteRequest::default_instance_ = NULL;

DeleteRequest* DeleteRequest::New(::google::protobuf::Arena* arena) const {
  DeleteRequest* n = new DeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.DeleteRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.DeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.DeleteRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.DeleteRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.DeleteRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.DeleteRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.DeleteRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.DeleteRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.DeleteRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.DeleteRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.DeleteRequest)
  return target;
}

int DeleteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.DeleteRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.DeleteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.DeleteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {

  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteRequest_descriptor_;
  metadata.reflection = DeleteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteRequest

// optional string row = 1;
void DeleteRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.row)
}
 void DeleteRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.row)
}
 void DeleteRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.row)
}
 ::std::string* DeleteRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.row)
}

// optional string col = 2;
void DeleteRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.DeleteRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.DeleteRequest.col)
}
 void DeleteRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.DeleteRequest.col)
}
 void DeleteRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.DeleteRequest.col)
}
 ::std::string* DeleteRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.DeleteRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.DeleteRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.DeleteRequest.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResponse::DeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.DeleteResponse)
}

void DeleteResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.DeleteResponse)
}

void DeleteResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:storagequery.DeleteResponse)
  SharedDtor();
}

void DeleteResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteResponse_descriptor_;
}

const DeleteResponse& DeleteResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

DeleteResponse* DeleteResponse::default_instance_ = NULL;

DeleteResponse* DeleteResponse::New(::google::protobuf::Arena* arena) const {
  DeleteResponse* n = new DeleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.DeleteResponse)
}

bool DeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.DeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.DeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.DeleteResponse)
  return false;
#undef DO_
}

void DeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.DeleteResponse)
  // @@protoc_insertion_point(serialize_end:storagequery.DeleteResponse)
}

::google::protobuf::uint8* DeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.DeleteResponse)
  // @@protoc_insertion_point(serialize_to_array_end:storagequery.DeleteResponse)
  return target;
}

int DeleteResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.DeleteResponse)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.DeleteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.DeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.DeleteResponse)
    MergeFrom(*source);
  }
}

void DeleteResponse::MergeFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.DeleteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void DeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {

  return true;
}

void DeleteResponse::Swap(DeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResponse::InternalSwap(DeleteResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteResponse_descriptor_;
  metadata.reflection = DeleteResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MigrateRequest::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MigrateRequest::MigrateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.MigrateRequest)
}

void MigrateRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MigrateRequest::MigrateRequest(const MigrateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.MigrateRequest)
}

void MigrateRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MigrateRequest::~MigrateRequest() {
  // @@protoc_insertion_point(destructor:storagequery.MigrateRequest)
  SharedDtor();
}

void MigrateRequest::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MigrateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MigrateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MigrateRequest_descriptor_;
}

const MigrateRequest& MigrateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

MigrateRequest* MigrateRequest::default_instance_ = NULL;

MigrateRequest* MigrateRequest::New(::google::protobuf::Arena* arena) const {
  MigrateRequest* n = new MigrateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MigrateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.MigrateRequest)
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MigrateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.MigrateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.MigrateRequest.addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.MigrateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.MigrateRequest)
  return false;
#undef DO_
}

void MigrateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.MigrateRequest)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.MigrateRequest.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.MigrateRequest)
}

::google::protobuf::uint8* MigrateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.MigrateRequest)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.MigrateRequest.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.MigrateRequest)
  return target;
}

int MigrateRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.MigrateRequest)
  int total_size = 0;

  // optional string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MigrateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.MigrateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MigrateRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MigrateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.MigrateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.MigrateRequest)
    MergeFrom(*source);
  }
}

void MigrateRequest::MergeFrom(const MigrateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.MigrateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
}

void MigrateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.MigrateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateRequest::CopyFrom(const MigrateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.MigrateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateRequest::IsInitialized() const {

  return true;
}

void MigrateRequest::Swap(MigrateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MigrateRequest::InternalSwap(MigrateRequest* other) {
  addr_.Swap(&other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MigrateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MigrateRequest_descriptor_;
  metadata.reflection = MigrateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MigrateRequest

// optional string addr = 1;
void MigrateRequest::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MigrateRequest::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.MigrateRequest.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MigrateRequest::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.MigrateRequest.addr)
}
 void MigrateRequest::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.MigrateRequest.addr)
}
 void MigrateRequest::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.MigrateRequest.addr)
}
 ::std::string* MigrateRequest::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.MigrateRequest.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MigrateRequest::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.MigrateRequest.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MigrateRequest::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.MigrateRequest.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MigrateResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MigrateResponse::MigrateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.MigrateResponse)
}

void MigrateResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MigrateResponse::MigrateResponse(const MigrateResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.MigrateResponse)
}

void MigrateResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MigrateResponse::~MigrateResponse() {
  // @@protoc_insertion_point(destructor:storagequery.MigrateResponse)
  SharedDtor();
}

void MigrateResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MigrateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MigrateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MigrateResponse_descriptor_;
}

const MigrateResponse& MigrateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

MigrateResponse* MigrateResponse::default_instance_ = NULL;

MigrateResponse* MigrateResponse::New(::google::protobuf::Arena* arena) const {
  MigrateResponse* n = new MigrateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MigrateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.MigrateResponse)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MigrateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.MigrateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.MigrateResponse.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.MigrateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.MigrateResponse)
  return false;
#undef DO_
}

void MigrateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.MigrateResponse)
  // optional string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.MigrateResponse.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.MigrateResponse)
}

::google::protobuf::uint8* MigrateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.MigrateResponse)
  // optional string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.MigrateResponse.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.MigrateResponse)
  return target;
}

int MigrateResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.MigrateResponse)
  int total_size = 0;

  // optional string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MigrateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.MigrateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MigrateResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MigrateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.MigrateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.MigrateResponse)
    MergeFrom(*source);
  }
}

void MigrateResponse::MergeFrom(const MigrateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.MigrateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MigrateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.MigrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrateResponse::CopyFrom(const MigrateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.MigrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrateResponse::IsInitialized() const {

  return true;
}

void MigrateResponse::Swap(MigrateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MigrateResponse::InternalSwap(MigrateResponse* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MigrateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MigrateResponse_descriptor_;
  metadata.reflection = MigrateResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MigrateResponse

// optional string data = 1;
void MigrateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MigrateResponse::data() const {
  // @@protoc_insertion_point(field_get:storagequery.MigrateResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MigrateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.MigrateResponse.data)
}
 void MigrateResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.MigrateResponse.data)
}
 void MigrateResponse::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.MigrateResponse.data)
}
 ::std::string* MigrateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.MigrateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MigrateResponse::release_data() {
  // @@protoc_insertion_point(field_release:storagequery.MigrateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MigrateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:storagequery.MigrateResponse.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.PingRequest)
}

void PingRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.PingRequest)
}

void PingRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:storagequery.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingRequest_descriptor_;
}

const PingRequest& PingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

PingRequest* PingRequest::default_instance_ = NULL;

PingRequest* PingRequest::New(::google::protobuf::Arena* arena) const {
  PingRequest* n = new PingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.PingRequest)
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.PingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.PingRequest)
  // @@protoc_insertion_point(serialize_end:storagequery.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.PingRequest)
  // @@protoc_insertion_point(serialize_to_array_end:storagequery.PingRequest)
  return target;
}

int PingRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.PingRequest)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.PingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.PingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {

  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingRequest_descriptor_;
  metadata.reflection = PingRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingResponse::PingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.PingResponse)
}

void PingResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PingResponse::PingResponse(const PingResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.PingResponse)
}

void PingResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:storagequery.PingResponse)
  SharedDtor();
}

void PingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingResponse_descriptor_;
}

const PingResponse& PingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

PingResponse* PingResponse::default_instance_ = NULL;

PingResponse* PingResponse::New(::google::protobuf::Arena* arena) const {
  PingResponse* n = new PingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.PingResponse)
}

bool PingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.PingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.PingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.PingResponse)
  return false;
#undef DO_
}

void PingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.PingResponse)
  // @@protoc_insertion_point(serialize_end:storagequery.PingResponse)
}

::google::protobuf::uint8* PingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.PingResponse)
  // @@protoc_insertion_point(serialize_to_array_end:storagequery.PingResponse)
  return target;
}

int PingResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.PingResponse)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.PingResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.PingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.PingResponse)
    MergeFrom(*source);
  }
}

void PingResponse::MergeFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.PingResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingResponse::IsInitialized() const {

  return true;
}

void PingResponse::Swap(PingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingResponse::InternalSwap(PingResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingResponse_descriptor_;
  metadata.reflection = PingResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeRequest::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeRequest::AddNodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.AddNodeRequest)
}

void AddNodeRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddNodeRequest::AddNodeRequest(const AddNodeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.AddNodeRequest)
}

void AddNodeRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddNodeRequest::~AddNodeRequest() {
  // @@protoc_insertion_point(destructor:storagequery.AddNodeRequest)
  SharedDtor();
}

void AddNodeRequest::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AddNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddNodeRequest_descriptor_;
}

const AddNodeRequest& AddNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

AddNodeRequest* AddNodeRequest::default_instance_ = NULL;

AddNodeRequest* AddNodeRequest::New(::google::protobuf::Arena* arena) const {
  AddNodeRequest* n = new AddNodeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.AddNodeRequest)
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.AddNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.AddNodeRequest.addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.AddNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.AddNodeRequest)
  return false;
#undef DO_
}

void AddNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.AddNodeRequest)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.AddNodeRequest.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.AddNodeRequest)
}

::google::protobuf::uint8* AddNodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.AddNodeRequest)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.AddNodeRequest.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.AddNodeRequest)
  return target;
}

int AddNodeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.AddNodeRequest)
  int total_size = 0;

  // optional string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.AddNodeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddNodeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.AddNodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.AddNodeRequest)
    MergeFrom(*source);
  }
}

void AddNodeRequest::MergeFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.AddNodeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
}

void AddNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeRequest::CopyFrom(const AddNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.AddNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeRequest::IsInitialized() const {

  return true;
}

void AddNodeRequest::Swap(AddNodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeRequest::InternalSwap(AddNodeRequest* other) {
  addr_.Swap(&other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddNodeRequest_descriptor_;
  metadata.reflection = AddNodeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddNodeRequest

// optional string addr = 1;
void AddNodeRequest::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AddNodeRequest::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.AddNodeRequest.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddNodeRequest::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.AddNodeRequest.addr)
}
 void AddNodeRequest::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.AddNodeRequest.addr)
}
 void AddNodeRequest::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.AddNodeRequest.addr)
}
 ::std::string* AddNodeRequest::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.AddNodeRequest.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddNodeRequest::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.AddNodeRequest.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddNodeRequest::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.AddNodeRequest.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNodeResponse::kDataMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNodeResponse::AddNodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.AddNodeResponse)
}

void AddNodeResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddNodeResponse::AddNodeResponse(const AddNodeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.AddNodeResponse)
}

void AddNodeResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddNodeResponse::~AddNodeResponse() {
  // @@protoc_insertion_point(destructor:storagequery.AddNodeResponse)
  SharedDtor();
}

void AddNodeResponse::SharedDtor() {
  data_map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AddNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddNodeResponse_descriptor_;
}

const AddNodeResponse& AddNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

AddNodeResponse* AddNodeResponse::default_instance_ = NULL;

AddNodeResponse* AddNodeResponse::New(::google::protobuf::Arena* arena) const {
  AddNodeResponse* n = new AddNodeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.AddNodeResponse)
  data_map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.AddNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data_map = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_map()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_map().data(), this->data_map().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.AddNodeResponse.data_map"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.AddNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.AddNodeResponse)
  return false;
#undef DO_
}

void AddNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.AddNodeResponse)
  // optional string data_map = 1;
  if (this->data_map().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_map().data(), this->data_map().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.AddNodeResponse.data_map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data_map(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.AddNodeResponse)
}

::google::protobuf::uint8* AddNodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.AddNodeResponse)
  // optional string data_map = 1;
  if (this->data_map().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_map().data(), this->data_map().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.AddNodeResponse.data_map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data_map(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.AddNodeResponse)
  return target;
}

int AddNodeResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.AddNodeResponse)
  int total_size = 0;

  // optional string data_map = 1;
  if (this->data_map().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_map());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.AddNodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddNodeResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.AddNodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.AddNodeResponse)
    MergeFrom(*source);
  }
}

void AddNodeResponse::MergeFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.AddNodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data_map().size() > 0) {

    data_map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_map_);
  }
}

void AddNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNodeResponse::CopyFrom(const AddNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.AddNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodeResponse::IsInitialized() const {

  return true;
}

void AddNodeResponse::Swap(AddNodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNodeResponse::InternalSwap(AddNodeResponse* other) {
  data_map_.Swap(&other->data_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddNodeResponse_descriptor_;
  metadata.reflection = AddNodeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddNodeResponse

// optional string data_map = 1;
void AddNodeResponse::clear_data_map() {
  data_map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AddNodeResponse::data_map() const {
  // @@protoc_insertion_point(field_get:storagequery.AddNodeResponse.data_map)
  return data_map_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddNodeResponse::set_data_map(const ::std::string& value) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.AddNodeResponse.data_map)
}
 void AddNodeResponse::set_data_map(const char* value) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.AddNodeResponse.data_map)
}
 void AddNodeResponse::set_data_map(const char* value, size_t size) {
  
  data_map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.AddNodeResponse.data_map)
}
 ::std::string* AddNodeResponse::mutable_data_map() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.AddNodeResponse.data_map)
  return data_map_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddNodeResponse::release_data_map() {
  // @@protoc_insertion_point(field_release:storagequery.AddNodeResponse.data_map)
  
  return data_map_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddNodeResponse::set_allocated_data_map(::std::string* data_map) {
  if (data_map != NULL) {
    
  } else {
    
  }
  data_map_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_map);
  // @@protoc_insertion_point(field_set_allocated:storagequery.AddNodeResponse.data_map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNodeRequest::kRowFieldNumber;
const int GetNodeRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNodeRequest::GetNodeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetNodeRequest)
}

void GetNodeRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNodeRequest::GetNodeRequest(const GetNodeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetNodeRequest)
}

void GetNodeRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNodeRequest::~GetNodeRequest() {
  // @@protoc_insertion_point(destructor:storagequery.GetNodeRequest)
  SharedDtor();
}

void GetNodeRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeRequest_descriptor_;
}

const GetNodeRequest& GetNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetNodeRequest* GetNodeRequest::default_instance_ = NULL;

GetNodeRequest* GetNodeRequest::New(::google::protobuf::Arena* arena) const {
  GetNodeRequest* n = new GetNodeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetNodeRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetNodeRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetNodeRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetNodeRequest)
  return false;
#undef DO_
}

void GetNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetNodeRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetNodeRequest)
}

::google::protobuf::uint8* GetNodeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetNodeRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetNodeRequest)
  return target;
}

int GetNodeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetNodeRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetNodeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetNodeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNodeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetNodeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetNodeRequest)
    MergeFrom(*source);
  }
}

void GetNodeRequest::MergeFrom(const GetNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetNodeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void GetNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeRequest::CopyFrom(const GetNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeRequest::IsInitialized() const {

  return true;
}

void GetNodeRequest::Swap(GetNodeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNodeRequest::InternalSwap(GetNodeRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeRequest_descriptor_;
  metadata.reflection = GetNodeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNodeRequest

// optional string row = 1;
void GetNodeRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNodeRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeRequest.row)
}
 void GetNodeRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeRequest.row)
}
 void GetNodeRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeRequest.row)
}
 ::std::string* GetNodeRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNodeRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeRequest.row)
}

// optional string col = 2;
void GetNodeRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNodeRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeRequest.col)
}
 void GetNodeRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeRequest.col)
}
 void GetNodeRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeRequest.col)
}
 ::std::string* GetNodeRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNodeRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeRequest.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNodeResponse::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNodeResponse::GetNodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetNodeResponse)
}

void GetNodeResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetNodeResponse::GetNodeResponse(const GetNodeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetNodeResponse)
}

void GetNodeResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetNodeResponse::~GetNodeResponse() {
  // @@protoc_insertion_point(destructor:storagequery.GetNodeResponse)
  SharedDtor();
}

void GetNodeResponse::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeResponse_descriptor_;
}

const GetNodeResponse& GetNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetNodeResponse* GetNodeResponse::default_instance_ = NULL;

GetNodeResponse* GetNodeResponse::New(::google::protobuf::Arena* arena) const {
  GetNodeResponse* n = new GetNodeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetNodeResponse)
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetNodeResponse.addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetNodeResponse)
  return false;
#undef DO_
}

void GetNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetNodeResponse)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeResponse.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetNodeResponse)
}

::google::protobuf::uint8* GetNodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetNodeResponse)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetNodeResponse.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetNodeResponse)
  return target;
}

int GetNodeResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetNodeResponse)
  int total_size = 0;

  // optional string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetNodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetNodeResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetNodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetNodeResponse)
    MergeFrom(*source);
  }
}

void GetNodeResponse::MergeFrom(const GetNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetNodeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
}

void GetNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeResponse::CopyFrom(const GetNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeResponse::IsInitialized() const {

  return true;
}

void GetNodeResponse::Swap(GetNodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNodeResponse::InternalSwap(GetNodeResponse* other) {
  addr_.Swap(&other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeResponse_descriptor_;
  metadata.reflection = GetNodeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNodeResponse

// optional string addr = 1;
void GetNodeResponse::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetNodeResponse::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.GetNodeResponse.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeResponse::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetNodeResponse.addr)
}
 void GetNodeResponse::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetNodeResponse.addr)
}
 void GetNodeResponse::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetNodeResponse.addr)
}
 ::std::string* GetNodeResponse::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetNodeResponse.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetNodeResponse::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.GetNodeResponse.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetNodeResponse::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetNodeResponse.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetReplicaRequest::kRowFieldNumber;
const int GetReplicaRequest::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReplicaRequest::GetReplicaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetReplicaRequest)
}

void GetReplicaRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetReplicaRequest::GetReplicaRequest(const GetReplicaRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetReplicaRequest)
}

void GetReplicaRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetReplicaRequest::~GetReplicaRequest() {
  // @@protoc_insertion_point(destructor:storagequery.GetReplicaRequest)
  SharedDtor();
}

void GetReplicaRequest::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetReplicaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetReplicaRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetReplicaRequest_descriptor_;
}

const GetReplicaRequest& GetReplicaRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetReplicaRequest* GetReplicaRequest::default_instance_ = NULL;

GetReplicaRequest* GetReplicaRequest::New(::google::protobuf::Arena* arena) const {
  GetReplicaRequest* n = new GetReplicaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetReplicaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetReplicaRequest)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetReplicaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetReplicaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetReplicaRequest.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetReplicaRequest.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetReplicaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetReplicaRequest)
  return false;
#undef DO_
}

void GetReplicaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetReplicaRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaRequest.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaRequest.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetReplicaRequest)
}

::google::protobuf::uint8* GetReplicaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetReplicaRequest)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaRequest.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaRequest.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetReplicaRequest)
  return target;
}

int GetReplicaRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetReplicaRequest)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetReplicaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetReplicaRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetReplicaRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetReplicaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetReplicaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetReplicaRequest)
    MergeFrom(*source);
  }
}

void GetReplicaRequest::MergeFrom(const GetReplicaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetReplicaRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void GetReplicaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetReplicaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReplicaRequest::CopyFrom(const GetReplicaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetReplicaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReplicaRequest::IsInitialized() const {

  return true;
}

void GetReplicaRequest::Swap(GetReplicaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReplicaRequest::InternalSwap(GetReplicaRequest* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetReplicaRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetReplicaRequest_descriptor_;
  metadata.reflection = GetReplicaRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetReplicaRequest

// optional string row = 1;
void GetReplicaRequest::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetReplicaRequest::row() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaRequest.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaRequest::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaRequest.row)
}
 void GetReplicaRequest::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaRequest.row)
}
 void GetReplicaRequest::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaRequest.row)
}
 ::std::string* GetReplicaRequest::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaRequest.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetReplicaRequest::release_row() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaRequest.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaRequest::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaRequest.row)
}

// optional string col = 2;
void GetReplicaRequest::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetReplicaRequest::col() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaRequest.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaRequest::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaRequest.col)
}
 void GetReplicaRequest::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaRequest.col)
}
 void GetReplicaRequest::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaRequest.col)
}
 ::std::string* GetReplicaRequest::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaRequest.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetReplicaRequest::release_col() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaRequest.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaRequest::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaRequest.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetReplicaResponse::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReplicaResponse::GetReplicaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:storagequery.GetReplicaResponse)
}

void GetReplicaResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetReplicaResponse::GetReplicaResponse(const GetReplicaResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:storagequery.GetReplicaResponse)
}

void GetReplicaResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetReplicaResponse::~GetReplicaResponse() {
  // @@protoc_insertion_point(destructor:storagequery.GetReplicaResponse)
  SharedDtor();
}

void GetReplicaResponse::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetReplicaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetReplicaResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetReplicaResponse_descriptor_;
}

const GetReplicaResponse& GetReplicaResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_storage_5fquery_2eproto();
  return *default_instance_;
}

GetReplicaResponse* GetReplicaResponse::default_instance_ = NULL;

GetReplicaResponse* GetReplicaResponse::New(::google::protobuf::Arena* arena) const {
  GetReplicaResponse* n = new GetReplicaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetReplicaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:storagequery.GetReplicaResponse)
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetReplicaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:storagequery.GetReplicaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "storagequery.GetReplicaResponse.addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:storagequery.GetReplicaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:storagequery.GetReplicaResponse)
  return false;
#undef DO_
}

void GetReplicaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:storagequery.GetReplicaResponse)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaResponse.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:storagequery.GetReplicaResponse)
}

::google::protobuf::uint8* GetReplicaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:storagequery.GetReplicaResponse)
  // optional string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "storagequery.GetReplicaResponse.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:storagequery.GetReplicaResponse)
  return target;
}

int GetReplicaResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:storagequery.GetReplicaResponse)
  int total_size = 0;

  // optional string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetReplicaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:storagequery.GetReplicaResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetReplicaResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetReplicaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:storagequery.GetReplicaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:storagequery.GetReplicaResponse)
    MergeFrom(*source);
  }
}

void GetReplicaResponse::MergeFrom(const GetReplicaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:storagequery.GetReplicaResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
}

void GetReplicaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:storagequery.GetReplicaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReplicaResponse::CopyFrom(const GetReplicaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:storagequery.GetReplicaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReplicaResponse::IsInitialized() const {

  return true;
}

void GetReplicaResponse::Swap(GetReplicaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReplicaResponse::InternalSwap(GetReplicaResponse* other) {
  addr_.Swap(&other->addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetReplicaResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetReplicaResponse_descriptor_;
  metadata.reflection = GetReplicaResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetReplicaResponse

// optional string addr = 1;
void GetReplicaResponse::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetReplicaResponse::addr() const {
  // @@protoc_insertion_point(field_get:storagequery.GetReplicaResponse.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaResponse::set_addr(const ::std::string& value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:storagequery.GetReplicaResponse.addr)
}
 void GetReplicaResponse::set_addr(const char* value) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:storagequery.GetReplicaResponse.addr)
}
 void GetReplicaResponse::set_addr(const char* value, size_t size) {
  
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:storagequery.GetReplicaResponse.addr)
}
 ::std::string* GetReplicaResponse::mutable_addr() {
  
  // @@protoc_insertion_point(field_mutable:storagequery.GetReplicaResponse.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetReplicaResponse::release_addr() {
  // @@protoc_insertion_point(field_release:storagequery.GetReplicaResponse.addr)
  
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetReplicaResponse::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    
  } else {
    
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:storagequery.GetReplicaResponse.addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace storagequery

// @@protoc_insertion_point(global_scope)
