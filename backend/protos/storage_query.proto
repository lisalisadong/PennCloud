syntax = "proto3";

// option java_multiple_files = true;
// option java_package = "io.grpc.examples.storagequery";
// option java_outer_classname = "StorageQueryProto";
// option objc_class_prefix = "SQ";

package storagequery;

service StorageQuery {
  rpc Get (GetRequest) returns (GetResponse) {}
  rpc Put (PutRequest) returns (PutResponse) {}
  rpc CPut (CPutRequest) returns (CPutResponse) {}
  rpc Delete (DeleteRequest) returns (DeleteResponse) {}
  rpc Migrate (MigrateRequest) returns (MigrateResponse) {}
  rpc Ping (PingRequest) returns (PingResponse) {}
  rpc AddNode (AddNodeRequest) returns (AddNodeResponse) {}
  rpc GetNode (GetNodeRequest) returns (GetNodeResponse) {}
  rpc GetReplica (GetReplicaRequest) returns (GetReplicaResponse) {}
  rpc DeleteNode (GetNodeRequest) returns (GetNodeResponse) {}
  rpc GetData (GetDataRequest) returns (GetDataResponse) {}
  rpc GetAllNodes (GetAllNodesRequest) returns (GetAllNodesResponse) {}
}  

// get
message GetRequest {
  string row = 1;
  string col = 2;
}

message GetResponse {
  bytes val = 1;
}

// put
message PutRequest {
  string row = 1;
  string col = 2;
  bytes val = 3;
}

message PutResponse {
  
}

// cput
message CPutRequest {
  string row = 1;
  string col = 2;
  bytes val1 = 3;
  bytes val2 = 4;
}

message CPutResponse {
  
}

// delete
message DeleteRequest {
  string row = 1;
  string col = 2;
}

message DeleteResponse {

}

// migrate
message MigrateRequest {
  string addr = 1;
}

message MigrateResponse {
  string data = 1;
}

// ping
message PingRequest {
  
}

message PingResponse {

}

// add node
message AddNodeRequest {
  string addr = 1;
}

message AddNodeResponse {
  string data_map = 1;
}

// get node
message GetNodeRequest {
  string row = 1;
  string col = 2;
}

message GetNodeResponse {
  string addr = 1;
}

// get replica
message GetReplicaRequest {
  string row = 1;
  string col = 2;
}

message GetReplicaResponse {
  string addr = 1;
}

// for admin
message GetDataRequest {
  uint32 start = 1;
  uint32 size = 2;
}

message GetDataResponse {
  uint32 size = 1;
  string data = 2;
}

message GetAllNodesRequest {
  
}

message GetAllNodesResponse {
  string up = 1;
  string down = 2;
}